#include "rectangle.h"
#include "instanceitem.h"
#include "messageitem.h"
#include <QBrush>
#include <QPainter>
#include <QDebug>

int Rectangle::width = 20;
int Rectangle::min_length = 50;
Rectangle*Rectangle::initial_block = nullptr;

int Rectangle::GetLength()
{
    return length;
}

void Rectangle::SetLength(int length)
{
    this->length = length;
    setRect(rect().x(), rect().y(), width, length);
    update();
}

Rectangle::Rectangle(QGraphicsItem *parent, MessageItem*origin, int offset) :
    QGraphicsRectItem(parent), length(min_length), origin(origin)
{
    if (!(instance = dynamic_cast<InstanceItem*>(parent))){
        qDebug("Bad Dynamic cast in BlockItem constructor");
        return;
    }
    instance->rectangles.append(this);

    setRect(instance->width/2 - width/2, 70 + offset, width, length);
    setFlag(QGraphicsItem::ItemIsSelectable);
}

void Rectangle::AddMessage(MessageItem *m)
{
    sent.append(m);
    UpdateLengths();
}

void Rectangle::UpdateLengths()
{
   initial_block->UpdateLengthsRec();
   initial_block->update();
}

int Rectangle::UpdateLengthsRec()
{
    int length_total = min_length;

    for (auto message : sent) {
        length_total += message->owner->UpdateLengthsRec();
    }
    SetLength(length_total);
    return length_total;
}

void Rectangle::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
{
    painter->setBrush(QBrush{Qt::white});
    painter->drawRect(rect());
}


